{"version":3,"file":"morpher.min.js","sources":["../node_modules/node-fetch/browser.js","../src/communicator.js","../src/russian/declension-forms.js","../src/russian/full-name.js","../src/russian/declension-result.js","../src/russian/number-spelling-result.js","../src/russian/date-spelling-result.js","../src/russian/adjective-genders.js","../src/russian/correction-forms.js","../src/russian/correction-entry.js","../src/morpher-error.js","../src/russian/user-dict.js","../src/russian/client.js","../src/ukrainian/declension-forms.js","../src/ukrainian/declension-result.js","../src/ukrainian/number-spelling-result.js","../src/ukrainian/correction-forms.js","../src/ukrainian/correction-entry.js","../src/ukrainian/user-dict.js","../src/ukrainian/client.js","../src/qazaq/declension-forms.js","../src/qazaq/same-number-forms.js","../src/qazaq/declension-result.js","../src/qazaq/client.js","../src/morpher.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","'use strict';\n\nif (!global.fetch) {\n  global.fetch = require('node-fetch');\n}\n\nclass Communicator {\n\n  static METHOD_GET = 'GET';\n  static METHOD_DELETE = 'DELETE';\n  static METHOD_POST = 'POST';\n  static CONTENT_BODY_KEY = 'Content-Body';\n\n  baseUrl = 'https://ws3.morpher.ru';\n  token = null;\n  timeoutMs = 3000;\n\n  constructor(params = {}) {\n    if (params.baseUrl !== undefined) {\n\n      if (params.baseUrl.indexOf('http') !== -1) {\n        this.baseUrl = params.baseUrl;\n      } else {\n        this.baseUrl = 'http://' + params.baseUrl;\n      }\n\n    }\n\n    if (params.token !== undefined) {\n      this.token = params.token;\n    }\n\n    if (params.timeoutMs !== undefined) {\n      this.timeoutMs = params.timeoutMs;\n    }\n  }\n\n  request(path, params = new Map(), method = Communicator.METHOD_GET) {\n\n    const isContentBody = this.isContentBody(params, method);\n\n    const requestParameters = isContentBody\n        ? params.get(Communicator.CONTENT_BODY_KEY)\n        : this.buildRequestParams(params);\n\n    const url = this.isPost(method)\n        ? this.buildUrl(path)\n        : this.buildUrl(path, params);\n\n    const contentType = isContentBody\n        ? 'text/plain; charset=utf-8'\n        : 'application/x-www-form-urlencoded';\n\n    const init = {\n      method: method,\n      headers: {\n        'Content-Type': contentType,\n        'Accept': 'application/json',\n      },\n    };\n\n    if (this.isPost(method)) {\n      init.body = requestParameters;\n    }\n\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(\n          () => reject(new Error('TIMEOUT')),\n          this.timeoutMs,\n      );\n\n      this.fetcher(url, init).then(value => {\n        clearTimeout(timer);\n        resolve(value);\n      }).catch(reason => {\n        clearTimeout(timer);\n        reject(reason);\n      });\n    });\n  }\n\n  buildUrl(path, params = new Map()) {\n    let url = new URL(path, this.baseUrl);\n\n    params.forEach((value, name) => {\n      url.searchParams.append(name, value);\n    });\n\n    if (this.token) {\n      url.searchParams.append('token', this.token);\n    }\n\n    return url.toString();\n  }\n\n  buildRequestParams(params) {\n    let sp = new URLSearchParams(params);\n    return sp.toString();\n  }\n\n  _fetcher(url, init) {\n    return fetch(url, init);\n  }\n\n  set fetcher(fn) {\n    this._fetcher = fn;\n  }\n\n  get fetcher() {\n    return this._fetcher;\n  }\n\n  isContentBody(params, method) {\n    return this.isPost(method) && params.size === 1 &&\n        params.has(Communicator.CONTENT_BODY_KEY);\n  }\n\n  isPost(method) {\n    return method.toUpperCase() === Communicator.METHOD_POST;\n  }\n\n}\n\nmodule.exports = Communicator;","'use strict';\n\nclass DeclensionForms {\n\n  constructor(props) {\n    if (props['И'] !== undefined) {\n      this.nominative = props['И'];\n      this['именительный'] = this.nominative;\n    }\n\n    this.genitive = props['Р'];\n    this['родительный'] = this.genitive;\n\n    this.dative = props['Д'];\n    this['дательный'] = this.dative;\n\n    this.accusative = props['В'];\n    this['винительный'] = this.accusative;\n\n    this.instrumental = props['Т'];\n    this['творительный'] = this.instrumental;\n\n    this.prepositional = props['П'];\n    this['предложный'] = this.prepositional;\n\n    if (props['П_о'] !== undefined) {\n      this.prepositional_O = props['П_о'];\n      this['предложный_О'] = this.prepositional_O;\n    }\n  }\n\n}\n\nmodule.exports = DeclensionForms;","'use strict';\n\nclass FullName {\n  constructor(props) {\n    this.name = props['И'];\n    this['имя'] = this.name;\n\n    this.surname = props['Ф'];\n    this['фамилия'] = this.surname;\n\n    this.patronymic = props['О'];\n    this['отчество'] = this.patronymic;\n  }\n}\n\nmodule.exports = FullName;","'use strict';\n\nconst DeclensionForms = require('./declension-forms');\nconst FullName = require('./full-name');\n\nclass DeclensionResult extends DeclensionForms {\n\n  constructor(props) {\n    super(props);\n\n    if (props['род'] !== undefined) {\n      this.gender = props['род'];\n      this['род'] = this.gender;\n    }\n\n    if (props['множественное'] !== undefined) {\n      this.plural = new DeclensionForms(props['множественное']);\n      this['множественное'] = this['plural'];\n    }\n\n    if (props['где'] !== undefined) {\n      this.where = props['где'];\n      this.locative = this.where;\n      this.gde = this.where;\n      this['где'] = this.where;\n    }\n\n    if (props['куда'] !== undefined) {\n      this.where_to = props['куда'];\n      this.kuda = this.where_to;\n      this['куда'] = this.where_to;\n    }\n\n    if (props['откуда'] !== undefined) {\n      this.where_from = props['откуда'];\n      this.whence = this.where_from;\n      this.otkuda = this.where_from;\n      this['откуда'] = this.where_from;\n    }\n\n    if (props['ФИО'] !== undefined) {\n      this.fullName = new FullName(props['ФИО']);\n      this['фио'] = this.fullName;\n    }\n  }\n\n}\n\nmodule.exports = DeclensionResult;","'use strict';\n\nconst DeclensionForms = require('./declension-forms');\n\nclass NumberSpellingResult {\n  constructor(props) {\n    this.n = new DeclensionForms(props['n']);\n    this.unit = new DeclensionForms(props['unit']);\n  }\n}\n\nmodule.exports = NumberSpellingResult;","'use strict';\n\nconst DeclensionForms = require('./declension-forms');\n\nclass DateSpellingResult extends DeclensionForms {\n  constructor(props) {\n    super(props);\n  }\n}\n\nmodule.exports = DateSpellingResult;","'use strict';\n\nclass AdjectiveGenders {\n  constructor(props) {\n    this.feminine = props['feminine'];\n    this['женский'] = this.feminine;\n\n    this.neuter = props['neuter'];\n    this['средний'] = this.neuter;\n\n    this.plural = props['plural'];\n    this['множественное'] = this.plural;\n  }\n}\n\nmodule.exports = AdjectiveGenders;","'use strict';\n\nclass CorrectionForms {\n\n  constructor(props) {\n\n    if (props['И'] !== undefined) {\n      this.nominative = props['И'];\n      this['именительный'] = this.nominative;\n    }\n\n    if (props['Р'] !== undefined) {\n      this.genitive = props['Р'];\n      this['родительный'] = this.genitive;\n    }\n\n    if (props['Д'] !== undefined) {\n      this.dative = props['Д'];\n      this['дательный'] = this.dative;\n    }\n\n    if (props['В'] !== undefined) {\n      this.accusative = props['В'];\n      this['винительный'] = this.accusative;\n    }\n\n    if (props['Т'] !== undefined) {\n      this.instrumental = props['Т'];\n      this['творительный'] = this.instrumental;\n    }\n\n    if (props['П'] !== undefined) {\n      this.prepositional = props['П'];\n      this['предложный'] = this.prepositional;\n    }\n\n    if (props['М'] !== undefined) {\n      this.locative = props['М'];\n      this['местный'] = this.locative;\n    }\n\n  }\n\n}\n\nmodule.exports = CorrectionForms;","'use strict';\n\nconst CorrectionForms = require('./correction-forms');\n\nclass CorrectionEntry {\n\n  constructor(props) {\n\n    if (props['singular'] !== undefined) {\n      this.singular = new CorrectionForms(props['singular']);\n    }\n\n    if (props['plural'] !== undefined) {\n      this.plural = new CorrectionForms(props['plural']);\n    }\n\n    if (props['gender'] !== undefined) {\n      this.gender = props['gender'];\n    }\n\n  }\n\n}\n\nmodule.exports = CorrectionEntry;","'use strict';\n\nclass MorpherError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\n\nmodule.exports = MorpherError;","'use strict';\n\nconst Communicator = require('../communicator');\nconst CorrectionEntry = require('./correction-entry');\nconst MorpherError = require('../morpher-error');\n\nclass UserDict {\n\n  path = '/russian/userdict';\n\n  constructor(communicator) {\n    this.communicator = communicator;\n  }\n\n  addOrUpdate(correctionEntry = {}) {\n\n    const params = new Map();\n\n    if (correctionEntry.singular !== undefined) {\n\n      if (correctionEntry.singular.nominative !== undefined) {\n        params.set('И', correctionEntry.singular.nominative);\n      }\n\n      if (correctionEntry.singular.genitive !== undefined) {\n        params.set('Р', correctionEntry.singular.genitive);\n      }\n\n      if (correctionEntry.singular.dative !== undefined) {\n        params.set('Д', correctionEntry.singular.dative);\n      }\n\n      if (correctionEntry.singular.accusative !== undefined) {\n        params.set('В', correctionEntry.singular.accusative);\n      }\n\n      if (correctionEntry.singular.instrumental !== undefined) {\n        params.set('Т', correctionEntry.singular.instrumental);\n      }\n\n      if (correctionEntry.singular.prepositional !== undefined) {\n        params.set('П', correctionEntry.singular.prepositional);\n      }\n\n      if (correctionEntry.singular.locative !== undefined) {\n        params.set('М', correctionEntry.singular.locative);\n      }\n    }\n\n    if (correctionEntry.plural !== undefined) {\n\n      if (correctionEntry.plural.nominative !== undefined) {\n        params.set('М_И', correctionEntry.plural.nominative);\n      }\n\n      if (correctionEntry.plural.genitive !== undefined) {\n        params.set('М_Р', correctionEntry.plural.genitive);\n      }\n\n      if (correctionEntry.plural.dative !== undefined) {\n        params.set('М_Д', correctionEntry.plural.dative);\n      }\n\n      if (correctionEntry.plural.accusative !== undefined) {\n        params.set('М_В', correctionEntry.plural.accusative);\n      }\n\n      if (correctionEntry.plural.instrumental !== undefined) {\n        params.set('М_Т', correctionEntry.plural.instrumental);\n      }\n\n      if (correctionEntry.plural.prepositional !== undefined) {\n        params.set('М_П', correctionEntry.plural.prepositional);\n      }\n\n      if (correctionEntry.plural.locative !== undefined) {\n        params.set('М_М', correctionEntry.plural.locative);\n      }\n    }\n\n    return this.communicator.request(\n        this.path,\n        params,\n        Communicator.METHOD_POST,\n    ).\n        then(response => response.text()).\n        then(text => {\n\n          // In the case of a successful request the service returns nothing,\n          // and in the case of an error in the specified format.\n          if (text === '') {\n            return true;\n          }\n\n          let data = {};\n\n          try {\n            data = JSON.parse(text);\n          } catch (e) {\n            throw new Error(e.message);\n          }\n\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n        });\n  }\n\n  getAll() {\n    return this.communicator.request(\n        this.path,\n        new Map(),\n        Communicator.METHOD_GET,\n    ).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data.map(e => new CorrectionEntry(e));\n        });\n  }\n\n  remove(nominativeForm = '') {\n    const params = new Map();\n    params.set('s', nominativeForm);\n\n    return this.communicator.request(\n        this.path,\n        params,\n        Communicator.METHOD_DELETE,\n    ).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data;\n        });\n  }\n\n}\n\nmodule.exports = UserDict;","'use strict';\n\nconst Communicator = require('../communicator');\nconst DeclensionResult = require('./declension-result');\nconst NumberSpellingResult = require('./number-spelling-result');\nconst DateSpellingResult = require('./date-spelling-result');\nconst AdjectiveGenders = require('./adjective-genders');\nconst UserDict = require('./user-dict');\nconst MorpherError = require('../morpher-error');\n\nclass Client {\n\n  prefix = '/russian';\n\n  constructor(communicator) {\n    this.communicator = communicator;\n    this.userDict = new UserDict(communicator);\n  }\n\n  declension(phrase = '', ...flags) {\n    const params = new Map();\n    params.set('s', phrase);\n\n    if (flags.length > 0) {\n      params.set('flags', flags.join(','));\n    }\n\n    const path = this.prefix + '/declension';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new DeclensionResult(data);\n        });\n  }\n\n  spell(number = 0, unit = '') {\n    const params = new Map();\n    params.set('n', number);\n    params.set('unit', unit);\n\n    const path = this.prefix + '/spell';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new NumberSpellingResult(data);\n        });\n  }\n\n  spellOrdinal(number = 0, unit = '') {\n    const params = new Map();\n    params.set('n', number);\n    params.set('unit', unit);\n\n    const path = this.prefix + '/spell-ordinal';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new NumberSpellingResult(data);\n        });\n  }\n\n  spellDate(date = '') {\n    const params = new Map();\n    params.set('date', date);\n\n    const path = this.prefix + '/spell-date';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new DateSpellingResult(data);\n        });\n  }\n\n  adjectiveGenders(adjective = '') {\n    const params = new Map();\n    params.set('s', adjective);\n\n    const path = this.prefix + '/genders';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new AdjectiveGenders(data);\n        });\n  }\n\n  adjectivize(lemma = '') {\n    const params = new Map();\n    params.set('s', lemma);\n\n    const path = this.prefix + '/adjectivize';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data;\n        });\n  }\n\n  addStressMarks(text = '') {\n    const params = new Map();\n    params.set(Communicator.CONTENT_BODY_KEY, text);\n\n    const path = this.prefix + '/addstressmarks';\n\n    return this.communicator.request(path, params, Communicator.METHOD_POST).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data;\n        });\n  }\n\n}\n\nmodule.exports = Client;","'use strict';\n\nclass DeclensionForms {\n\n  constructor(props) {\n    if (props['Н'] !== undefined) {\n      this.nominative = props['Н'];\n      this['називний'] = this.nominative;\n    }\n\n    this.genitive = props['Р'];\n    this['родовий'] = this.genitive;\n\n    this.dative = props['Д'];\n    this['давальний'] = this.dative;\n\n    this.accusative = props['З'];\n    this['знахідний'] = this.accusative;\n\n    this.instrumental = props['О'];\n    this['орудний'] = this.instrumental;\n\n    this.prepositional = props['М'];\n    this['місцевий'] = this.prepositional;\n\n    this.vocative = props['К'];\n    this['кличний'] = this.vocative;\n\n  }\n\n}\n\nmodule.exports = DeclensionForms;","'use strict';\n\nconst DeclensionForms = require('./declension-forms');\n\nclass DeclensionResult extends DeclensionForms {\n\n  constructor(props) {\n    super(props);\n\n    if (props['рід'] !== undefined) {\n      this.gender = props['рід'];\n      this['рід'] = this.gender;\n    }\n  }\n\n}\n\nmodule.exports = DeclensionResult;","'use strict';\n\nconst DeclensionForms = require('./declension-forms');\n\nclass NumberSpellingResult {\n  constructor(props) {\n    this.n = new DeclensionForms(props['n']);\n    this.unit = new DeclensionForms(props['unit']);\n  }\n}\n\nmodule.exports = NumberSpellingResult;","'use strict';\n\nclass CorrectionForms {\n\n  constructor(props) {\n\n    if (props['Н'] !== undefined) {\n      this.nominative = props['Н'];\n      this['називний'] = this.nominative;\n    }\n\n    if (props['Р'] !== undefined) {\n      this.genitive = props['Р'];\n      this['родовий'] = this.genitive;\n    }\n\n    if (props['Д'] !== undefined) {\n      this.dative = props['Д'];\n      this['давальний'] = this.dative;\n    }\n\n    if (props['З'] !== undefined) {\n      this.accusative = props['З'];\n      this['знахідний'] = this.accusative;\n    }\n\n    if (props['О'] !== undefined) {\n      this.instrumental = props['О'];\n      this['орудний'] = this.instrumental;\n    }\n\n    if (props['М'] !== undefined) {\n      this.prepositional = props['М'];\n      this['місцевий'] = this.prepositional;\n    }\n\n    if (props['К'] !== undefined) {\n      this.vocative = props['К'];\n      this['кличний'] = this.vocative;\n    }\n\n  }\n\n}\n\nmodule.exports = CorrectionForms;","'use strict';\n\nconst CorrectionForms = require('./correction-forms');\n\nclass CorrectionEntry {\n\n  constructor(props) {\n\n    if (props['singular'] !== undefined) {\n      this.singular = new CorrectionForms(props['singular']);\n    }\n\n    if (props['gender'] !== undefined) {\n      this.gender = props['gender'];\n    }\n\n  }\n\n}\n\nmodule.exports = CorrectionEntry;","'use strict';\n\nconst Communicator = require('../communicator');\nconst CorrectionEntry = require('./correction-entry');\nconst MorpherError = require('../morpher-error');\n\nclass UserDict {\n\n  path = '/ukrainian/userdict';\n\n  constructor(communicator) {\n    this.communicator = communicator;\n  }\n\n  addOrUpdate(correctionEntry = {}) {\n\n    const params = new Map();\n\n    if (correctionEntry.singular !== undefined) {\n\n      if (correctionEntry.singular.nominative !== undefined) {\n        params.set('Н', correctionEntry.singular.nominative);\n      }\n\n      if (correctionEntry.singular.genitive !== undefined) {\n        params.set('Р', correctionEntry.singular.genitive);\n      }\n\n      if (correctionEntry.singular.dative !== undefined) {\n        params.set('Д', correctionEntry.singular.dative);\n      }\n\n      if (correctionEntry.singular.accusative !== undefined) {\n        params.set('З', correctionEntry.singular.accusative);\n      }\n\n      if (correctionEntry.singular.instrumental !== undefined) {\n        params.set('О', correctionEntry.singular.instrumental);\n      }\n\n      if (correctionEntry.singular.prepositional !== undefined) {\n        params.set('М', correctionEntry.singular.prepositional);\n      }\n\n      if (correctionEntry.singular.vocative !== undefined) {\n        params.set('К', correctionEntry.singular.vocative);\n      }\n    }\n\n    return this.communicator.request(\n        this.path,\n        params,\n        Communicator.METHOD_POST,\n    ).\n        then(response => response.text()).\n        then(text => {\n\n          // In the case of a successful request the service returns nothing,\n          // and in the case of an error in the specified format.\n          if (text === '') {\n            return true;\n          }\n\n          let data = {};\n\n          try {\n            data = JSON.parse(text);\n          } catch (e) {\n            throw new Error(e.message);\n          }\n\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n        });\n  }\n\n  getAll() {\n    return this.communicator.request(\n        this.path,\n        new Map(),\n        Communicator.METHOD_GET,\n    ).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data.map(e => new CorrectionEntry(e));\n        });\n  }\n\n  remove(nominativeForm = '') {\n    const params = new Map();\n    params.set('s', nominativeForm);\n\n    return this.communicator.request(\n        this.path,\n        params,\n        Communicator.METHOD_DELETE,\n    ).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data;\n        });\n  }\n\n}\n\nmodule.exports = UserDict;","'use strict';\n\nconst Communicator = require('../communicator');\nconst DeclensionResult = require('./declension-result');\nconst NumberSpellingResult = require('./number-spelling-result');\nconst UserDict = require('./user-dict');\nconst MorpherError = require('../morpher-error');\n\nclass Client {\n\n  prefix = '/ukrainian';\n\n  constructor(communicator) {\n    this.communicator = communicator;\n    this.userDict = new UserDict(communicator);\n  }\n\n  declension(phrase = '', ...flags) {\n    const params = new Map();\n    params.set('s', phrase);\n\n    if (flags.length > 0) {\n      params.set('flags', flags.join(','));\n    }\n\n    const path = this.prefix + '/declension';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new DeclensionResult(data);\n        });\n  }\n\n  spell(number = 0, unit = '') {\n    const params = new Map();\n    params.set('n', number);\n    params.set('unit', unit);\n\n    const path = this.prefix + '/spell';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new NumberSpellingResult(data);\n        });\n  }\n\n}\n\nmodule.exports = Client;","'use strict';\n\nclass DeclensionForms {\n\n  constructor(props) {\n\n    if (props['A'] !== undefined) {\n      this.nominative = props['A'];\n      this['атау'] = this.nominative;\n    }\n\n    this.genitive = props['І'];\n    this['ілік'] = this.genitive;\n\n    this.dative = props['Б'];\n    this['барыс'] = this.dative;\n\n    this.accusative = props['Т'];\n    this['табыс'] = this.accusative;\n\n    this.ablative = props['Ш'];\n    this['шығыс'] = this.ablative;\n\n    this.locative = props['Ж'];\n    this['жатыс'] = this.locative;\n\n    this.instrumental = props['К'];\n    this['көмектес'] = this.instrumental;\n\n  }\n\n}\n\nmodule.exports = DeclensionForms;","'use strict';\n\nconst DeclensionForms = require('./declension-forms');\n\nclass SameNumberForms extends DeclensionForms {\n\n  constructor(props) {\n    super(props);\n\n    this.firstPerson = new DeclensionForms(props['менің']);\n    this['менің'] = this.firstPerson;\n\n    this.secondPerson = new DeclensionForms(props['сенің']);\n    this['сенің'] = this.secondPerson;\n\n    this.secondPersonRespectful = new DeclensionForms(props['сіздің']);\n    this['сіздің'] = this.secondPersonRespectful;\n\n    this.thirdPerson = new DeclensionForms(props['оның']);\n    this['оның'] = this.thirdPerson;\n\n    this.firstPersonPlural = new DeclensionForms(props['біздің']);\n    this['біздің'] = this.firstPersonPlural;\n\n    this.secondPersonPlural = new DeclensionForms(props['сендердің']);\n    this['сендердің'] = this.secondPersonPlural;\n\n    this.secondPersonRespectfulPlural = new DeclensionForms(props['сіздердің']);\n    this['сіздердің'] = this.secondPersonRespectfulPlural;\n\n    this.thirdPersonPlural = new DeclensionForms(props['олардың']);\n    this['олардың'] = this.thirdPersonPlural;\n\n  }\n\n}\n\nmodule.exports = SameNumberForms;","'use strict';\n\nconst SameNumberForms = require('./same-number-forms');\n\nclass DeclensionResult extends SameNumberForms {\n\n  constructor(props) {\n    super(props);\n\n    this.plural = new SameNumberForms(props['көпше']);\n    this['көпше'] = this.plural;\n  }\n\n}\n\nmodule.exports = DeclensionResult;","'use strict';\n\nconst Communicator = require('../communicator');\nconst DeclensionResult = require('./declension-result');\nconst MorpherError = require('../morpher-error');\n\nclass Client {\n\n  prefix = '/qazaq';\n\n  constructor(communicator) {\n    this.communicator = communicator;\n  }\n\n  declension(phrase) {\n    const params = new Map();\n    params.set('s', phrase);\n\n    const path = this.prefix + '/declension';\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return new DeclensionResult(data);\n        });\n  }\n}\n\nmodule.exports = Client;","'use strict';\n\nconst Communicator = require('./communicator');\nconst RussianClient = require('./russian/client');\nconst UkrainianClient = require('./ukrainian/client');\nconst QazaqClient = require('./qazaq/client');\nconst MorpherError = require('./morpher-error');\n\nclass Morpher {\n\n  static FLAG_FEMININE = 'feminine';\n  static FLAG_MASCULINE = 'masculine';\n  static FLAG_ANIMATE = 'animate';\n  static FLAG_INANIMATE = 'inanimate';\n  static FLAG_COMMON = 'common';\n  static FLAG_NAME = 'name';\n  static FLAG_NEUTER = 'neuter';\n  static FLAG_PLURAL = 'plural';\n\n  constructor(params) {\n    this.communicator = new Communicator(params);\n  }\n\n  set communicator(value) {\n    this._communicator = value;\n  }\n\n  get communicator() {\n    return this._communicator;\n  }\n\n  get russian() {\n    return new RussianClient(this.communicator);\n  }\n\n  get ukrainian() {\n    return new UkrainianClient(this.communicator);\n  }\n\n  get qazaq() {\n    return new QazaqClient(this.communicator);\n  }\n\n  getQueriesLeft() {\n    const path = '/get-queries-left';\n    const params = new Map();\n\n    return this.communicator.request(path, params, Communicator.METHOD_GET).\n        then(response => response.json()).\n        then(data => {\n          if (data['message'] && data['code']) {\n            throw new MorpherError(data['message'], data['code']);\n          }\n\n          return data;\n        });\n  }\n\n}\n\nmodule.exports = Morpher;"],"names":["global","self","window","Error","getGlobal","module","exports","fetch","bind","Headers","Request","Response","require$$0","Communicator","params","undefined","baseUrl","indexOf","token","timeoutMs","path","Map","method","METHOD_GET","isContentBody","this","requestParameters","get","CONTENT_BODY_KEY","buildRequestParams","url","isPost","buildUrl","contentType","init","headers","body","Promise","resolve","reject","timer","setTimeout","_this","fetcher","then","value","clearTimeout","reason","URL","forEach","name","searchParams","append","toString","URLSearchParams","_fetcher","fn","size","has","toUpperCase","METHOD_POST","props","nominative","genitive","dative","accusative","instrumental","prepositional","prepositional_O","surname","patronymic","gender","plural","DeclensionForms","where","locative","gde","where_to","kuda","where_from","whence","otkuda","fullName","FullName","n","unit","feminine","neuter","singular","CorrectionForms","message","code","communicator","correctionEntry","set","request","response","text","data","JSON","parse","e","MorpherError","json","map","CorrectionEntry","nominativeForm","METHOD_DELETE","userDict","UserDict","phrase","flags","length","join","prefix","DeclensionResult","number","NumberSpellingResult","date","DateSpellingResult","adjective","AdjectiveGenders","lemma","vocative","ablative","firstPerson","secondPerson","secondPersonRespectful","thirdPerson","firstPersonPlural","secondPersonPlural","secondPersonRespectfulPlural","thirdPersonPlural","SameNumberForms","Morpher","_communicator","RussianClient","UkrainianClient","QazaqClient"],"mappings":"gmFAaIA,EAVY,cAIK,oBAATC,YAA+BA,QACpB,oBAAXC,cAAiCA,eACtB,IAAXF,SAAiCA,QACtC,IAAIG,MAAM,kCAGJC,GAEbC,UAAiBC,EAAUN,EAAOO,MAG9BP,EAAOO,QACVD,UAAkBN,EAAOO,MAAMC,KAAKR,IAGrCM,UAAkBN,EAAOS,QACzBH,UAAkBN,EAAOU,QACzBJ,WAAmBN,EAAOW,YCtBrBX,EAAOO,QACVP,EAAOO,MAAQK,OAGXC,8BAWQC,yDAAS,8BAJX,yCACF,yBACI,UAGaC,IAAnBD,EAAOE,WAE+B,IAApCF,EAAOE,QAAQC,QAAQ,aACpBD,QAAUF,EAAOE,aAEjBA,QAAU,UAAYF,EAAOE,cAKjBD,IAAjBD,EAAOI,aACJA,MAAQJ,EAAOI,YAGGH,IAArBD,EAAOK,iBACJA,UAAYL,EAAOK,4CAI5B,SAAQC,cAAMN,yDAAS,IAAIO,IAAOC,yDAAST,EAAaU,WAEhDC,EAAgBC,KAAKD,cAAcV,EAAQQ,GAE3CI,EAAoBF,EACpBV,EAAOa,IAAId,EAAae,kBACxBH,KAAKI,mBAAmBf,GAExBgB,EAAML,KAAKM,OAAOT,GAClBG,KAAKO,SAASZ,GACdK,KAAKO,SAASZ,EAAMN,GAEpBmB,EAAcT,EACd,4BACA,oCAEAU,EAAO,CACXZ,OAAQA,EACRa,QAAS,gBACSF,SACN,4BAIVR,KAAKM,OAAOT,KACdY,EAAKE,KAAOV,GAGP,IAAIW,SAAQ,SAACC,EAASC,OACrBC,EAAQC,YACV,kBAAMF,EAAO,IAAIpC,MAAM,cACvBuC,EAAKvB,WAGTuB,EAAKC,QAAQb,EAAKI,GAAMU,MAAK,SAAAC,GAC3BC,aAAaN,GACbF,EAAQO,aACD,SAAAE,GACPD,aAAaN,GACbD,EAAOQ,iCAKb,SAAS3B,OAAMN,yDAAS,IAAIO,IACtBS,EAAM,IAAIkB,IAAI5B,EAAMK,KAAKT,gBAE7BF,EAAOmC,SAAQ,SAACJ,EAAOK,GACrBpB,EAAIqB,aAAaC,OAAOF,EAAML,MAG5BpB,KAAKP,OACPY,EAAIqB,aAAaC,OAAO,QAAS3B,KAAKP,OAGjCY,EAAIuB,6CAGb,SAAmBvC,UACR,IAAIwC,gBAAgBxC,GACnBuC,mCAGZ,SAASvB,EAAKI,UACL3B,MAAMuB,EAAKI,wBAOpB,kBACST,KAAK8B,cALd,SAAYC,QACLD,SAAWC,+BAOlB,SAAc1C,EAAQQ,UACbG,KAAKM,OAAOT,IAA2B,IAAhBR,EAAO2C,MACjC3C,EAAO4C,IAAI7C,EAAae,wCAG9B,SAAON,UACEA,EAAOqC,gBAAkB9C,EAAa+C,uBAhH3C/C,eAEgB,SAFhBA,kBAGmB,YAHnBA,gBAIiB,UAJjBA,qBAKsB,gBAgH5B,MAAiBA,ICvHf,WAAYgD,kBACS9C,IAAf8C,EAAM,YACHC,WAAaD,EAAM,UACnB,gBAAkBpC,KAAKqC,iBAGzBC,SAAWF,EAAM,UACjB,eAAiBpC,KAAKsC,cAEtBC,OAASH,EAAM,UACf,aAAepC,KAAKuC,YAEpBC,WAAaJ,EAAM,UACnB,eAAiBpC,KAAKwC,gBAEtBC,aAAeL,EAAM,UACrB,gBAAkBpC,KAAKyC,kBAEvBC,cAAgBN,EAAM,UACtB,cAAgBpC,KAAK0C,mBAELpD,IAAjB8C,EAAM,cACHO,gBAAkBP,EAAM,YACxB,gBAAkBpC,KAAK2C,oBCxBhC,WAAYP,kBACLX,KAAOW,EAAM,UACb,OAASpC,KAAKyB,UAEdmB,QAAUR,EAAM,UAChB,WAAapC,KAAK4C,aAElBC,WAAaT,EAAM,UACnB,YAAcpC,KAAK6C,uDCJdT,wCACJA,QAEe9C,IAAjB8C,EAAM,WACHU,OAASV,EAAM,SACf,OAASnB,EAAK6B,aAGUxD,IAA3B8C,EAAM,qBACHW,OAAS,IAAIC,EAAgBZ,EAAM,oBACnC,iBAAmBnB,EAAA,aAGL3B,IAAjB8C,EAAM,WACHa,MAAQb,EAAM,SACdc,SAAWjC,EAAKgC,QAChBE,IAAMlC,EAAKgC,QACX,OAAShC,EAAKgC,YAGC3D,IAAlB8C,EAAM,YACHgB,SAAWhB,EAAM,UACjBiB,KAAOpC,EAAKmC,WACZ,QAAUnC,EAAKmC,eAGE9D,IAApB8C,EAAM,cACHkB,WAAalB,EAAM,YACnBmB,OAAStC,EAAKqC,aACdE,OAASvC,EAAKqC,aACd,UAAYrC,EAAKqC,iBAGHhE,IAAjB8C,EAAM,WACHqB,SAAW,IAAIC,EAAStB,EAAM,UAC9B,OAASnB,EAAKwC,sBArCMT,KCA7B,WAAYZ,kBACLuB,EAAI,IAAIX,EAAgBZ,EAAK,QAC7BwB,KAAO,IAAIZ,EAAgBZ,EAAK,kDCF3BA,gCACJA,aAFuBY,KCD/B,WAAYZ,kBACLyB,SAAWzB,EAAK,cAChB,WAAapC,KAAK6D,cAElBC,OAAS1B,EAAK,YACd,WAAapC,KAAK8D,YAElBf,OAASX,EAAK,YACd,iBAAmBpC,KAAK+C,UCP/B,WAAYX,kBAES9C,IAAf8C,EAAM,YACHC,WAAaD,EAAM,UACnB,gBAAkBpC,KAAKqC,iBAGX/C,IAAf8C,EAAM,YACHE,SAAWF,EAAM,UACjB,eAAiBpC,KAAKsC,eAGVhD,IAAf8C,EAAM,YACHG,OAASH,EAAM,UACf,aAAepC,KAAKuC,aAGRjD,IAAf8C,EAAM,YACHI,WAAaJ,EAAM,UACnB,eAAiBpC,KAAKwC,iBAGVlD,IAAf8C,EAAM,YACHK,aAAeL,EAAM,UACrB,gBAAkBpC,KAAKyC,mBAGXnD,IAAf8C,EAAM,YACHM,cAAgBN,EAAM,UACtB,cAAgBpC,KAAK0C,oBAGTpD,IAAf8C,EAAM,YACHc,SAAWd,EAAM,UACjB,WAAapC,KAAKkD,aChC3B,WAAYd,kBAEgB9C,IAAtB8C,EAAK,gBACF2B,SAAW,IAAIC,EAAgB5B,EAAK,gBAGnB9C,IAApB8C,EAAK,cACFW,OAAS,IAAIiB,EAAgB5B,EAAK,cAGjB9C,IAApB8C,EAAK,cACFU,OAASV,EAAK,oDCdX6B,EAASC,yCACbD,IACDC,KAAOA,gBAHWxF,gCCQbyF,2BAFL,0BAGAA,aAAeA,uCAGtB,eAAYC,yDAAkB,GAEtB/E,EAAS,IAAIO,gBAEcN,IAA7B8E,EAAgBL,gBAE0BzE,IAAxC8E,EAAgBL,SAAS1B,YAC3BhD,EAAOgF,IAAI,IAAKD,EAAgBL,SAAS1B,iBAGD/C,IAAtC8E,EAAgBL,SAASzB,UAC3BjD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASzB,eAGHhD,IAApC8E,EAAgBL,SAASxB,QAC3BlD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASxB,aAGCjD,IAAxC8E,EAAgBL,SAASvB,YAC3BnD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASvB,iBAGGlD,IAA1C8E,EAAgBL,SAAStB,cAC3BpD,EAAOgF,IAAI,IAAKD,EAAgBL,SAAStB,mBAGInD,IAA3C8E,EAAgBL,SAASrB,eAC3BrD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASrB,oBAGDpD,IAAtC8E,EAAgBL,SAASb,UAC3B7D,EAAOgF,IAAI,IAAKD,EAAgBL,SAASb,gBAId5D,IAA3B8E,EAAgBrB,cAEwBzD,IAAtC8E,EAAgBrB,OAAOV,YACzBhD,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAOV,iBAGH/C,IAApC8E,EAAgBrB,OAAOT,UACzBjD,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAOT,eAGLhD,IAAlC8E,EAAgBrB,OAAOR,QACzBlD,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAOR,aAGDjD,IAAtC8E,EAAgBrB,OAAOP,YACzBnD,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAOP,iBAGClD,IAAxC8E,EAAgBrB,OAAON,cACzBpD,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAON,mBAGEnD,IAAzC8E,EAAgBrB,OAAOL,eACzBrD,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAOL,oBAGHpD,IAApC8E,EAAgBrB,OAAOG,UACzB7D,EAAOgF,IAAI,MAAOD,EAAgBrB,OAAOG,WAItClD,KAAKmE,aAAaG,QACrBtE,KAAKL,KACLN,EACAD,EAAa+C,aAEbhB,MAAK,SAAAoD,UAAYA,EAASC,UAC1BrD,MAAK,SAAAqD,MAIU,KAATA,SACK,MAGLC,EAAO,OAGTA,EAAOC,KAAKC,MAAMH,GAClB,MAAOI,SACD,IAAIlG,MAAMkG,EAAEX,YAGhBQ,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,+BAMtD,kBACSzE,KAAKmE,aAAaG,QACrBtE,KAAKL,KACL,IAAIC,IACJR,EAAaU,YAEbqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,EAAKM,KAAI,SAAAH,UAAK,IAAII,EAAgBJ,+BAIjD,eAAOK,yDAAiB,GAChB5F,EAAS,IAAIO,WACnBP,EAAOgF,IAAI,IAAKY,GAETjF,KAAKmE,aAAaG,QACrBtE,KAAKL,KACLN,EACAD,EAAa8F,eAEb/D,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,sCC9HHN,6BAFH,iBAGFA,aAAeA,OACfgB,SAAW,IAAIC,EAASjB,uCAG/B,eAAWkB,yDAAS,GACZhG,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAKgB,8BAFSC,mCAAAA,oBAIrBA,EAAMC,OAAS,GACjBlG,EAAOgF,IAAI,QAASiB,EAAME,KAAK,UAG3B7F,EAAOK,KAAKyF,OAAS,qBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAIiB,EAAiBjB,2BAIpC,eAAMkB,yDAAS,EAAG/B,yDAAO,GACjBvE,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAKsB,GAChBtG,EAAOgF,IAAI,OAAQT,OAEbjE,EAAOK,KAAKyF,OAAS,gBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAImB,EAAqBnB,kCAIxC,eAAakB,yDAAS,EAAG/B,yDAAO,GACxBvE,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAKsB,GAChBtG,EAAOgF,IAAI,OAAQT,OAEbjE,EAAOK,KAAKyF,OAAS,wBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAImB,EAAqBnB,+BAIxC,eAAUoB,yDAAO,GACTxG,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,OAAQwB,OAEblG,EAAOK,KAAKyF,OAAS,qBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAIqB,EAAmBrB,sCAItC,eAAiBsB,yDAAY,GACrB1G,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAK0B,OAEVpG,EAAOK,KAAKyF,OAAS,kBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAIuB,EAAiBvB,iCAIpC,eAAYwB,yDAAQ,GACZ5G,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAK4B,OAEVtG,EAAOK,KAAKyF,OAAS,sBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,mCAIf,eAAeD,yDAAO,GACdnF,EAAS,IAAIO,IACnBP,EAAOgF,IAAIjF,EAAae,iBAAkBqE,OAEpC7E,EAAOK,KAAKyF,OAAS,yBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAa+C,aACxDhB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,gBCxIf,WAAYrC,kBACS9C,IAAf8C,EAAM,YACHC,WAAaD,EAAM,UACnB,YAAcpC,KAAKqC,iBAGrBC,SAAWF,EAAM,UACjB,WAAapC,KAAKsC,cAElBC,OAASH,EAAM,UACf,aAAepC,KAAKuC,YAEpBC,WAAaJ,EAAM,UACnB,aAAepC,KAAKwC,gBAEpBC,aAAeL,EAAM,UACrB,WAAapC,KAAKyC,kBAElBC,cAAgBN,EAAM,UACtB,YAAcpC,KAAK0C,mBAEnBwD,SAAW9D,EAAM,UACjB,WAAapC,KAAKkG,qDCpBb9D,wCACJA,QAEe9C,IAAjB8C,EAAM,WACHU,OAASV,EAAM,SACf,OAASnB,EAAK6B,oBAPME,KCC7B,WAAYZ,kBACLuB,EAAI,IAAIX,EAAgBZ,EAAK,QAC7BwB,KAAO,IAAIZ,EAAgBZ,EAAK,SCHvC,WAAYA,kBAES9C,IAAf8C,EAAM,YACHC,WAAaD,EAAM,UACnB,YAAcpC,KAAKqC,iBAGP/C,IAAf8C,EAAM,YACHE,SAAWF,EAAM,UACjB,WAAapC,KAAKsC,eAGNhD,IAAf8C,EAAM,YACHG,OAASH,EAAM,UACf,aAAepC,KAAKuC,aAGRjD,IAAf8C,EAAM,YACHI,WAAaJ,EAAM,UACnB,aAAepC,KAAKwC,iBAGRlD,IAAf8C,EAAM,YACHK,aAAeL,EAAM,UACrB,WAAapC,KAAKyC,mBAGNnD,IAAf8C,EAAM,YACHM,cAAgBN,EAAM,UACtB,YAAcpC,KAAK0C,oBAGPpD,IAAf8C,EAAM,YACH8D,SAAW9D,EAAM,UACjB,WAAapC,KAAKkG,aChC3B,WAAY9D,kBAEgB9C,IAAtB8C,EAAK,gBACF2B,SAAW,IAAIC,EAAgB5B,EAAK,gBAGnB9C,IAApB8C,EAAK,cACFU,OAASV,EAAK,iCCHX+B,2BAFL,4BAGAA,aAAeA,uCAGtB,eAAYC,yDAAkB,GAEtB/E,EAAS,IAAIO,gBAEcN,IAA7B8E,EAAgBL,gBAE0BzE,IAAxC8E,EAAgBL,SAAS1B,YAC3BhD,EAAOgF,IAAI,IAAKD,EAAgBL,SAAS1B,iBAGD/C,IAAtC8E,EAAgBL,SAASzB,UAC3BjD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASzB,eAGHhD,IAApC8E,EAAgBL,SAASxB,QAC3BlD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASxB,aAGCjD,IAAxC8E,EAAgBL,SAASvB,YAC3BnD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASvB,iBAGGlD,IAA1C8E,EAAgBL,SAAStB,cAC3BpD,EAAOgF,IAAI,IAAKD,EAAgBL,SAAStB,mBAGInD,IAA3C8E,EAAgBL,SAASrB,eAC3BrD,EAAOgF,IAAI,IAAKD,EAAgBL,SAASrB,oBAGDpD,IAAtC8E,EAAgBL,SAASmC,UAC3B7G,EAAOgF,IAAI,IAAKD,EAAgBL,SAASmC,WAItClG,KAAKmE,aAAaG,QACrBtE,KAAKL,KACLN,EACAD,EAAa+C,aAEbhB,MAAK,SAAAoD,UAAYA,EAASC,UAC1BrD,MAAK,SAAAqD,MAIU,KAATA,SACK,MAGLC,EAAO,OAGTA,EAAOC,KAAKC,MAAMH,GAClB,MAAOI,SACD,IAAIlG,MAAMkG,EAAEX,YAGhBQ,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,+BAMtD,kBACSzE,KAAKmE,aAAaG,QACrBtE,KAAKL,KACL,IAAIC,IACJR,EAAaU,YAEbqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,EAAKM,KAAI,SAAAH,UAAK,IAAII,EAAgBJ,+BAIjD,eAAOK,yDAAiB,GAChB5F,EAAS,IAAIO,WACnBP,EAAOgF,IAAI,IAAKY,GAETjF,KAAKmE,aAAaG,QACrBtE,KAAKL,KACLN,EACAD,EAAa8F,eAEb/D,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,sCCjGHN,6BAFH,mBAGFA,aAAeA,OACfgB,SAAW,IAAIC,EAASjB,uCAG/B,eAAWkB,yDAAS,GACZhG,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAKgB,8BAFSC,mCAAAA,oBAIrBA,EAAMC,OAAS,GACjBlG,EAAOgF,IAAI,QAASiB,EAAME,KAAK,UAG3B7F,EAAOK,KAAKyF,OAAS,qBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAIiB,EAAiBjB,2BAIpC,eAAMkB,yDAAS,EAAG/B,yDAAO,GACjBvE,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAKsB,GAChBtG,EAAOgF,IAAI,OAAQT,OAEbjE,EAAOK,KAAKyF,OAAS,gBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAImB,EAAqBnB,iBChDxC,WAAYrC,kBAES9C,IAAf8C,EAAK,SACFC,WAAaD,EAAK,OAClB,QAAUpC,KAAKqC,iBAGjBC,SAAWF,EAAM,UACjB,QAAUpC,KAAKsC,cAEfC,OAASH,EAAM,UACf,SAAWpC,KAAKuC,YAEhBC,WAAaJ,EAAM,UACnB,SAAWpC,KAAKwC,gBAEhB2D,SAAW/D,EAAM,UACjB,SAAWpC,KAAKmG,cAEhBjD,SAAWd,EAAM,UACjB,SAAWpC,KAAKkD,cAEhBT,aAAeL,EAAM,UACrB,YAAcpC,KAAKyC,yDCrBdL,yCACJA,IAEDgE,YAAc,IAAIpD,EAAgBZ,EAAM,YACxC,SAAWnB,EAAKmF,cAEhBC,aAAe,IAAIrD,EAAgBZ,EAAM,YACzC,SAAWnB,EAAKoF,eAEhBC,uBAAyB,IAAItD,EAAgBZ,EAAM,aACnD,UAAYnB,EAAKqF,yBAEjBC,YAAc,IAAIvD,EAAgBZ,EAAM,WACxC,QAAUnB,EAAKsF,cAEfC,kBAAoB,IAAIxD,EAAgBZ,EAAM,aAC9C,UAAYnB,EAAKuF,oBAEjBC,mBAAqB,IAAIzD,EAAgBZ,EAAM,gBAC/C,aAAenB,EAAKwF,qBAEpBC,6BAA+B,IAAI1D,EAAgBZ,EAAM,gBACzD,aAAenB,EAAKyF,+BAEpBC,kBAAoB,IAAI3D,EAAgBZ,EAAM,cAC9C,WAAanB,EAAK0F,8BA3BG3D,8CCEhBZ,yCACJA,IAEDW,OAAS,IAAI6D,EAAgBxE,EAAM,YACnC,SAAWnB,EAAK8B,mBANM6D,2BCMjBzC,6BAFH,eAGFA,aAAeA,sCAGtB,SAAWkB,OACHhG,EAAS,IAAIO,IACnBP,EAAOgF,IAAI,IAAKgB,OAEV1F,EAAOK,KAAKyF,OAAS,qBAEpBzF,KAAKmE,aAAaG,QAAQ3E,EAAMN,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvC,IAAIiB,EAAiBjB,eCnBhCoC,wBAWQxH,kBACL8E,aAAe,IAAI/E,EAAaC,uCAOvC,kBACSW,KAAK8G,mBALd,SAAiB1F,QACV0F,cAAgB1F,uBAOvB,kBACS,IAAI2F,EAAc/G,KAAKmE,qCAGhC,kBACS,IAAI6C,EAAgBhH,KAAKmE,iCAGlC,kBACS,IAAI8C,EAAYjH,KAAKmE,4CAG9B,eAEQ9E,EAAS,IAAIO,WAEZI,KAAKmE,aAAaG,QAHZ,oBAG0BjF,EAAQD,EAAaU,YACxDqB,MAAK,SAAAoD,UAAYA,EAASO,UAC1B3D,MAAK,SAAAsD,MACCA,EAAI,SAAeA,EAAI,WACnB,IAAII,EAAaJ,EAAI,QAAaA,EAAI,aAGvCA,uBA9CXoC,kBAEmB,cAFnBA,mBAGoB,eAHpBA,iBAIkB,aAJlBA,mBAKoB,eALpBA,gBAMiB,YANjBA,cAOe,UAPfA,gBAQiB,YARjBA,gBASiB,UA2CNA"}